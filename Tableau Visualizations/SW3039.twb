<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20223.22.1005.1835                               -->
<workbook original-version='18.1' source-build='2022.3.0 (20223.22.1005.1835)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Orders+ (Superstore2022)' inline='true' name='federated.022gvv119xq82z1h1iv331uqcpq1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Superstore2022' name='excel-direct.1rmejao0n2y5ld120bqt60af0em4'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/User/Downloads/Superstore2022.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1rmejao0n2y5ld120bqt60af0em4' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.1rmejao0n2y5ld120bqt60af0em4' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='string' name='Country/Region' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State/Province' ordinal='10' />
              <column datatype='string' name='Postal Code' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Product ID' ordinal='13' />
              <column datatype='string' name='Category' ordinal='14' />
              <column datatype='string' name='Sub-Category' ordinal='15' />
              <column datatype='string' name='Product Name' ordinal='16' />
              <column datatype='real' name='Sales' ordinal='17' />
              <column datatype='integer' name='Quantity' ordinal='18' />
              <column datatype='real' name='Discount' ordinal='19' />
              <column datatype='real' name='Profit' ordinal='20' />
            </columns>
          </relation>
          <relation connection='excel-direct.1rmejao0n2y5ld120bqt60af0em4' name='People' table='[People$]' type='table'>
            <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
              <column datatype='string' name='Regional Manager' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.1rmejao0n2y5ld120bqt60af0em4' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:B801:no:A1:B801:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country/Region]' value='[Orders].[Country/Region]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (People)]' value='[People].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Regional Manager]' value='[People].[Regional Manager]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[State/Province]' value='[Orders].[State/Province]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U10195:no:A1:U10195:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[People]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B5:no:A1:B5:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B801:no:A1:B801:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F84B2CB10FF74D418A4328AE7BB12191]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F84B2CB10FF74D418A4328AE7BB12191]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F84B2CB10FF74D418A4328AE7BB12191]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F84B2CB10FF74D418A4328AE7BB12191]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F84B2CB10FF74D418A4328AE7BB12191]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F84B2CB10FF74D418A4328AE7BB12191]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F84B2CB10FF74D418A4328AE7BB12191]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F84B2CB10FF74D418A4328AE7BB12191]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F84B2CB10FF74D418A4328AE7BB12191]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F84B2CB10FF74D418A4328AE7BB12191]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State/Province]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State/Province</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F84B2CB10FF74D418A4328AE7BB12191]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F84B2CB10FF74D418A4328AE7BB12191]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F84B2CB10FF74D418A4328AE7BB12191]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F84B2CB10FF74D418A4328AE7BB12191]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F84B2CB10FF74D418A4328AE7BB12191]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F84B2CB10FF74D418A4328AE7BB12191]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F84B2CB10FF74D418A4328AE7BB12191]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F84B2CB10FF74D418A4328AE7BB12191]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F84B2CB10FF74D418A4328AE7BB12191]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F84B2CB10FF74D418A4328AE7BB12191]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F84B2CB10FF74D418A4328AE7BB12191]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Regional Manager</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Regional Manager]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Regional Manager</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_EFFA44684B404EBFB9FBB64522841CB9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (People)]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_EFFA44684B404EBFB9FBB64522841CB9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_4A2B0798703E44BE888D3B38D3DFD627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_4A2B0798703E44BE888D3B38D3DFD627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Profit Margin' datatype='real' default-format='p0%' name='[Calculation_1148417931643600896]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit] )/SUM([Sales] )' />
      </column>
      <column caption='Profit per order' datatype='real' name='[Calculation_1148417931803979778]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit] )/COUNT([__tableau_internal_object_id__].[Orders_F84B2CB10FF74D418A4328AE7BB12191])' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_F84B2CB10FF74D418A4328AE7BB12191]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='People' datatype='table' name='[__tableau_internal_object_id__].[People_EFFA44684B404EBFB9FBB64522841CB9]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Returns' datatype='table' name='[__tableau_internal_object_id__].[Returns_4A2B0798703E44BE888D3B38D3DFD627]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Orders_F84B2CB10FF74D418A4328AE7BB12191]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_F84B2CB10FF74D418A4328AE7BB12191:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[People_EFFA44684B404EBFB9FBB64522841CB9]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:People_EFFA44684B404EBFB9FBB64522841CB9:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Returns_4A2B0798703E44BE888D3B38D3DFD627]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Returns_4A2B0798703E44BE888D3B38D3DFD627:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Avg' name='[avg:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1148417931643600896]' derivation='User' name='[usr:Calculation_1148417931643600896:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1148417931803979778]' derivation='User' name='[usr:Calculation_1148417931803979778:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Segment:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Consumer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Home Office&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Corporate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sub-Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.022gvv119xq82z1h1iv331uqcpq1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.022gvv119xq82z1h1iv331uqcpq1].[avg:Sales:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.022gvv119xq82z1h1iv331uqcpq1].[__tableau_internal_object_id__].[cnt:Returns_4A2B0798703E44BE888D3B38D3DFD627:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.022gvv119xq82z1h1iv331uqcpq1].[__tableau_internal_object_id__].[cnt:People_EFFA44684B404EBFB9FBB64522841CB9:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.022gvv119xq82z1h1iv331uqcpq1].[sum:Quantity:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.022gvv119xq82z1h1iv331uqcpq1].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.022gvv119xq82z1h1iv331uqcpq1].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.022gvv119xq82z1h1iv331uqcpq1].[__tableau_internal_object_id__].[cnt:Orders_F84B2CB10FF74D418A4328AE7BB12191:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.022gvv119xq82z1h1iv331uqcpq1].[sum:Discount:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.022gvv119xq82z1h1iv331uqcpq1].[usr:Calculation_1148417931803979778:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.022gvv119xq82z1h1iv331uqcpq1].[usr:Calculation_1148417931643600896:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_F84B2CB10FF74D418A4328AE7BB12191'>
            <properties context=''>
              <relation connection='excel-direct.1rmejao0n2y5ld120bqt60af0em4' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State/Province' ordinal='10' />
                  <column datatype='string' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='People' id='People_EFFA44684B404EBFB9FBB64522841CB9'>
            <properties context=''>
              <relation connection='excel-direct.1rmejao0n2y5ld120bqt60af0em4' name='People' table='[People$]' type='table'>
                <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
                  <column datatype='string' name='Regional Manager' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Returns' id='Returns_4A2B0798703E44BE888D3B38D3DFD627'>
            <properties context=''>
              <relation connection='excel-direct.1rmejao0n2y5ld120bqt60af0em4' name='Returns' table='[Returns$]' type='table'>
                <columns gridOrigin='A1:B801:no:A1:B801:0' header='yes' outcome='6'>
                  <column datatype='string' name='Returned' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Region]' />
              <expression op='[Region (People)]' />
            </expression>
            <first-end-point object-id='Orders_F84B2CB10FF74D418A4328AE7BB12191' />
            <second-end-point object-id='People_EFFA44684B404EBFB9FBB64522841CB9' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Order ID]' />
              <expression op='[Order ID (Returns)]' />
            </expression>
            <first-end-point object-id='Orders_F84B2CB10FF74D418A4328AE7BB12191' />
            <second-end-point object-id='Returns_4A2B0798703E44BE888D3B38D3DFD627' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='1a'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Sales for 2021</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore2022)' name='federated.022gvv119xq82z1h1iv331uqcpq1' />
          </datasources>
          <datasource-dependencies datasource='federated.022gvv119xq82z1h1iv331uqcpq1'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.022gvv119xq82z1h1iv331uqcpq1].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.022gvv119xq82z1h1iv331uqcpq1].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Region:nk]' />
              <text column='[federated.022gvv119xq82z1h1iv331uqcpq1].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.022gvv119xq82z1h1iv331uqcpq1].[sum:Sales:qk]</rows>
        <cols>([federated.022gvv119xq82z1h1iv331uqcpq1].[none:Segment:nk] / [federated.022gvv119xq82z1h1iv331uqcpq1].[none:Region:nk])</cols>
      </table>
      <simple-id uuid='{34BE3F28-D843-45BD-BF48-29EA784C5B4F}' />
    </worksheet>
    <worksheet name='1b'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Profits on Sales for 2021</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore2022)' name='federated.022gvv119xq82z1h1iv331uqcpq1' />
          </datasources>
          <datasource-dependencies datasource='federated.022gvv119xq82z1h1iv331uqcpq1'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.022gvv119xq82z1h1iv331uqcpq1].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.022gvv119xq82z1h1iv331uqcpq1].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.022gvv119xq82z1h1iv331uqcpq1].[sum:Profit:qk]' />
              <text column='[federated.022gvv119xq82z1h1iv331uqcpq1].[sum:Sales:qk]' />
              <text column='[federated.022gvv119xq82z1h1iv331uqcpq1].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.022gvv119xq82z1h1iv331uqcpq1].[sum:Sales:qk]</rows>
        <cols>([federated.022gvv119xq82z1h1iv331uqcpq1].[none:Segment:nk] / [federated.022gvv119xq82z1h1iv331uqcpq1].[none:Region:nk])</cols>
      </table>
      <simple-id uuid='{248579AC-C577-4A33-99EC-0A958A7AE032}' />
    </worksheet>
    <worksheet name='1c'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Profits for 2021</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore2022)' name='federated.022gvv119xq82z1h1iv331uqcpq1' />
          </datasources>
          <datasource-dependencies datasource='federated.022gvv119xq82z1h1iv331uqcpq1'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.022gvv119xq82z1h1iv331uqcpq1].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.022gvv119xq82z1h1iv331uqcpq1].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Segment:nk]' />
              <text column='[federated.022gvv119xq82z1h1iv331uqcpq1].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.022gvv119xq82z1h1iv331uqcpq1].[sum:Profit:qk]</rows>
        <cols>([federated.022gvv119xq82z1h1iv331uqcpq1].[none:Region:nk] / [federated.022gvv119xq82z1h1iv331uqcpq1].[none:Segment:nk])</cols>
      </table>
      <simple-id uuid='{191C0387-FC62-417F-A266-B8C5F7F01BEC}' />
    </worksheet>
    <worksheet name='1d'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Category yielding to the highest profits for the segment in 2021</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore2022)' name='federated.022gvv119xq82z1h1iv331uqcpq1' />
          </datasources>
          <datasource-dependencies datasource='federated.022gvv119xq82z1h1iv331uqcpq1'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Segment:nk]'>
            <groupfilter function='member' level='[none:Segment:nk]' member='&quot;Consumer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.022gvv119xq82z1h1iv331uqcpq1].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.022gvv119xq82z1h1iv331uqcpq1].[yr:Order Date:ok]</column>
            <column>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Segment:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Category:nk]' />
              <text column='[federated.022gvv119xq82z1h1iv331uqcpq1].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.022gvv119xq82z1h1iv331uqcpq1].[none:Category:nk] * [federated.022gvv119xq82z1h1iv331uqcpq1].[sum:Profit:qk])</rows>
        <cols>([federated.022gvv119xq82z1h1iv331uqcpq1].[none:Region:nk] / [federated.022gvv119xq82z1h1iv331uqcpq1].[none:Segment:nk])</cols>
      </table>
      <simple-id uuid='{121BE022-904A-4B4C-AC07-37A679025B39}' />
    </worksheet>
    <worksheet name='1e'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average discounts in 2021&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore2022)' name='federated.022gvv119xq82z1h1iv331uqcpq1' />
          </datasources>
          <datasource-dependencies datasource='federated.022gvv119xq82z1h1iv331uqcpq1'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Discount]' derivation='Avg' name='[avg:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Segment:nk]'>
            <groupfilter function='member' level='[none:Segment:nk]' member='&quot;Consumer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.022gvv119xq82z1h1iv331uqcpq1].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.022gvv119xq82z1h1iv331uqcpq1].[yr:Order Date:ok]</column>
            <column>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Segment:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.022gvv119xq82z1h1iv331uqcpq1].[avg:Discount:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.022gvv119xq82z1h1iv331uqcpq1].[sum:Profit:qk]' />
              <text column='[federated.022gvv119xq82z1h1iv331uqcpq1].[avg:Discount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.022gvv119xq82z1h1iv331uqcpq1].[none:Category:nk] * [federated.022gvv119xq82z1h1iv331uqcpq1].[avg:Discount:qk])</rows>
        <cols>([federated.022gvv119xq82z1h1iv331uqcpq1].[none:Region:nk] / [federated.022gvv119xq82z1h1iv331uqcpq1].[none:Segment:nk])</cols>
      </table>
      <simple-id uuid='{B3425366-AE82-4D3D-992E-2D564CAEEC2C}' />
    </worksheet>
    <worksheet name='2a'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Profit margins for subcategories 

</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore2022)' name='federated.022gvv119xq82z1h1iv331uqcpq1' />
          </datasources>
          <datasource-dependencies datasource='federated.022gvv119xq82z1h1iv331uqcpq1'>
            <column caption='Profit Margin' datatype='real' default-format='p0%' name='[Calculation_1148417931643600896]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit] )/SUM([Sales] )' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1148417931643600896]' derivation='User' name='[usr:Calculation_1148417931643600896:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Sub-Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.022gvv119xq82z1h1iv331uqcpq1].[usr:Calculation_1148417931643600896:qk]</rows>
        <cols>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{C5C8AD8C-A67F-46FB-A8A4-D3BD643F09DE}' />
    </worksheet>
    <worksheet name='2b'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Lowest profit margin subcategory

</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore2022)' name='federated.022gvv119xq82z1h1iv331uqcpq1' />
          </datasources>
          <datasource-dependencies datasource='federated.022gvv119xq82z1h1iv331uqcpq1'>
            <column caption='Profit Margin' datatype='real' default-format='p0%' name='[Calculation_1148417931643600896]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit] )/SUM([Sales] )' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1148417931643600896]' derivation='User' name='[usr:Calculation_1148417931643600896:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.022gvv119xq82z1h1iv331uqcpq1].[usr:Calculation_1148417931643600896:qk]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.022gvv119xq82z1h1iv331uqcpq1].[usr:Calculation_1148417931643600896:qk]' />
              <text column='[federated.022gvv119xq82z1h1iv331uqcpq1].[usr:Calculation_1148417931643600896:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Sub-Category:nk]</rows>
        <cols>[federated.022gvv119xq82z1h1iv331uqcpq1].[usr:Calculation_1148417931643600896:qk]</cols>
      </table>
      <simple-id uuid='{B3A88BD1-6447-461B-A620-CB31D7442E1F}' />
    </worksheet>
    <worksheet name='2c'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Negative profit margin subcategories

</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore2022)' name='federated.022gvv119xq82z1h1iv331uqcpq1' />
          </datasources>
          <datasource-dependencies datasource='federated.022gvv119xq82z1h1iv331uqcpq1'>
            <column caption='Profit Margin' datatype='real' default-format='p0%' name='[Calculation_1148417931643600896]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit] )/SUM([Sales] )' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Orders' datatype='integer' name='[__tableau_internal_object_id__].[Orders_F84B2CB10FF74D418A4328AE7BB12191]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_F84B2CB10FF74D418A4328AE7BB12191]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Orders_F84B2CB10FF74D418A4328AE7BB12191]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_F84B2CB10FF74D418A4328AE7BB12191:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1148417931643600896]' derivation='User' name='[usr:Calculation_1148417931643600896:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Sub-Category:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Bookcases&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Supplies&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Tables&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.022gvv119xq82z1h1iv331uqcpq1].[usr:Calculation_1148417931643600896:qk]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Sub-Category:nk]' />
              <text column='[federated.022gvv119xq82z1h1iv331uqcpq1].[usr:Calculation_1148417931643600896:qk]' />
              <text column='[federated.022gvv119xq82z1h1iv331uqcpq1].[__tableau_internal_object_id__].[cnt:Orders_F84B2CB10FF74D418A4328AE7BB12191:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.022gvv119xq82z1h1iv331uqcpq1].[usr:Calculation_1148417931643600896:qk]</rows>
        <cols>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{995C5902-88FA-407D-B93A-12E3CA27CB8C}' />
    </worksheet>
    <worksheet name='2d'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Regional negative profit margin subcategories

</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore2022)' name='federated.022gvv119xq82z1h1iv331uqcpq1' />
          </datasources>
          <datasource-dependencies datasource='federated.022gvv119xq82z1h1iv331uqcpq1'>
            <column caption='Profit Margin' datatype='real' default-format='p0%' name='[Calculation_1148417931643600896]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit] )/SUM([Sales] )' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1148417931643600896]' derivation='User' name='[usr:Calculation_1148417931643600896:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Sub-Category:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Bookcases&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Supplies&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Tables&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.022gvv119xq82z1h1iv331uqcpq1].[usr:Calculation_1148417931643600896:qk]' included-values='in-range'>
            <min>-0.27766633980484007</min>
            <max>0.0</max>
          </filter>
          <slices>
            <column>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Sub-Category:nk]</column>
            <column>[federated.022gvv119xq82z1h1iv331uqcpq1].[usr:Calculation_1148417931643600896:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.022gvv119xq82z1h1iv331uqcpq1].[usr:Calculation_1148417931643600896:qk]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Sub-Category:nk]' />
              <text column='[federated.022gvv119xq82z1h1iv331uqcpq1].[usr:Calculation_1148417931643600896:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.022gvv119xq82z1h1iv331uqcpq1].[none:Region:nk] * [federated.022gvv119xq82z1h1iv331uqcpq1].[usr:Calculation_1148417931643600896:qk])</rows>
        <cols>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{D09D5AA9-6C92-46A3-9233-8BABCA495E0F}' />
    </worksheet>
    <worksheet name='3a'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Quarter Sales of subcategories</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore2022)' name='federated.022gvv119xq82z1h1iv331uqcpq1' />
          </datasources>
          <datasource-dependencies datasource='federated.022gvv119xq82z1h1iv331uqcpq1'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.022gvv119xq82z1h1iv331uqcpq1].[yr:Order Date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2021' />
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2022' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.022gvv119xq82z1h1iv331uqcpq1].[sum:Sales:qk]' shelf='rows'>
              <sort-filter-info>
                <sort-filter level-name='[federated.022gvv119xq82z1h1iv331uqcpq1].[qr:Order Date:ok]' member-value='4' />
                <sort-filter level-name='[federated.022gvv119xq82z1h1iv331uqcpq1].[yr:Order Date:ok]' member-value='2021' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <slices>
            <column>[federated.022gvv119xq82z1h1iv331uqcpq1].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.022gvv119xq82z1h1iv331uqcpq1].[sum:Sales:qk]' palette='blue_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.022gvv119xq82z1h1iv331uqcpq1].[sum:Sales:qk]' />
              <text column='[federated.022gvv119xq82z1h1iv331uqcpq1].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Sub-Category:nk]</rows>
        <cols>([federated.022gvv119xq82z1h1iv331uqcpq1].[yr:Order Date:ok] / [federated.022gvv119xq82z1h1iv331uqcpq1].[qr:Order Date:ok])</cols>
      </table>
      <simple-id uuid='{4384FAEC-ED09-4869-AA7E-7887909B7DDF}' />
    </worksheet>
    <worksheet name='4a'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average sales and Profit per order by segment</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore2022)' name='federated.022gvv119xq82z1h1iv331uqcpq1' />
          </datasources>
          <datasource-dependencies datasource='federated.022gvv119xq82z1h1iv331uqcpq1'>
            <column caption='Profit per order' datatype='real' name='[Calculation_1148417931803979778]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit] )/COUNT([__tableau_internal_object_id__].[Orders_F84B2CB10FF74D418A4328AE7BB12191])' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Orders' datatype='integer' name='[__tableau_internal_object_id__].[Orders_F84B2CB10FF74D418A4328AE7BB12191]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_F84B2CB10FF74D418A4328AE7BB12191]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Avg' name='[avg:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1148417931803979778]' derivation='User' name='[usr:Calculation_1148417931803979778:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.022gvv119xq82z1h1iv331uqcpq1].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.022gvv119xq82z1h1iv331uqcpq1].[avg:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.022gvv119xq82z1h1iv331uqcpq1].[usr:Calculation_1148417931803979778:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.022gvv119xq82z1h1iv331uqcpq1].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.022gvv119xq82z1h1iv331uqcpq1].[avg:Sales:qk]&quot;</bucket>
              <bucket>&quot;[federated.022gvv119xq82z1h1iv331uqcpq1].[usr:Calculation_1148417931803979778:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.022gvv119xq82z1h1iv331uqcpq1].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='11' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.022gvv119xq82z1h1iv331uqcpq1].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.022gvv119xq82z1h1iv331uqcpq1].[yr:Order Date:ok] * [federated.022gvv119xq82z1h1iv331uqcpq1].[Multiple Values])</rows>
        <cols>([federated.022gvv119xq82z1h1iv331uqcpq1].[none:Segment:nk] / [federated.022gvv119xq82z1h1iv331uqcpq1].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{0418295B-8526-45C9-BD3F-628070613C57}' />
    </worksheet>
    <worksheet name='4b'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average sales and Profit per order by category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore2022)' name='federated.022gvv119xq82z1h1iv331uqcpq1' />
          </datasources>
          <datasource-dependencies datasource='federated.022gvv119xq82z1h1iv331uqcpq1'>
            <column caption='Profit per order' datatype='real' name='[Calculation_1148417931803979778]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit] )/COUNT([__tableau_internal_object_id__].[Orders_F84B2CB10FF74D418A4328AE7BB12191])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Orders' datatype='integer' name='[__tableau_internal_object_id__].[Orders_F84B2CB10FF74D418A4328AE7BB12191]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_F84B2CB10FF74D418A4328AE7BB12191]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Avg' name='[avg:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1148417931803979778]' derivation='User' name='[usr:Calculation_1148417931803979778:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.022gvv119xq82z1h1iv331uqcpq1].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.022gvv119xq82z1h1iv331uqcpq1].[avg:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.022gvv119xq82z1h1iv331uqcpq1].[usr:Calculation_1148417931803979778:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.022gvv119xq82z1h1iv331uqcpq1].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.022gvv119xq82z1h1iv331uqcpq1].[avg:Sales:qk]&quot;</bucket>
              <bucket>&quot;[federated.022gvv119xq82z1h1iv331uqcpq1].[usr:Calculation_1148417931803979778:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.022gvv119xq82z1h1iv331uqcpq1].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.022gvv119xq82z1h1iv331uqcpq1].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.022gvv119xq82z1h1iv331uqcpq1].[yr:Order Date:ok] * [federated.022gvv119xq82z1h1iv331uqcpq1].[Multiple Values])</rows>
        <cols>([federated.022gvv119xq82z1h1iv331uqcpq1].[none:Category:nk] / [federated.022gvv119xq82z1h1iv331uqcpq1].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{798DB1D7-7712-4041-A6DE-C96EF4A95163}' />
    </worksheet>
    <worksheet name='4c'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average sales and Profit per order by subcategory</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore2022)' name='federated.022gvv119xq82z1h1iv331uqcpq1' />
          </datasources>
          <datasource-dependencies datasource='federated.022gvv119xq82z1h1iv331uqcpq1'>
            <column caption='Profit per order' datatype='real' name='[Calculation_1148417931803979778]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit] )/COUNT([__tableau_internal_object_id__].[Orders_F84B2CB10FF74D418A4328AE7BB12191])' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Orders' datatype='integer' name='[__tableau_internal_object_id__].[Orders_F84B2CB10FF74D418A4328AE7BB12191]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_F84B2CB10FF74D418A4328AE7BB12191]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Avg' name='[avg:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1148417931803979778]' derivation='User' name='[usr:Calculation_1148417931803979778:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.022gvv119xq82z1h1iv331uqcpq1].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.022gvv119xq82z1h1iv331uqcpq1].[avg:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.022gvv119xq82z1h1iv331uqcpq1].[usr:Calculation_1148417931803979778:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.022gvv119xq82z1h1iv331uqcpq1].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.022gvv119xq82z1h1iv331uqcpq1].[avg:Sales:qk]&quot;</bucket>
              <bucket>&quot;[federated.022gvv119xq82z1h1iv331uqcpq1].[usr:Calculation_1148417931803979778:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.022gvv119xq82z1h1iv331uqcpq1].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.022gvv119xq82z1h1iv331uqcpq1].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.022gvv119xq82z1h1iv331uqcpq1].[yr:Order Date:ok] / [federated.022gvv119xq82z1h1iv331uqcpq1].[none:Sub-Category:nk])</rows>
        <cols>([federated.022gvv119xq82z1h1iv331uqcpq1].[:Measure Names] * [federated.022gvv119xq82z1h1iv331uqcpq1].[Multiple Values])</cols>
      </table>
      <simple-id uuid='{FD970EF8-5052-42C0-8D25-4E576A874FE2}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='1a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.022gvv119xq82z1h1iv331uqcpq1].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='1' param='[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Category:nk]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Country/Region:nk]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Order Date:qk]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Region:nk]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Segment:nk]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0A19B683-A05F-4BA5-AC9D-13572353C81A}' />
    </window>
    <window class='worksheet' name='1b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.022gvv119xq82z1h1iv331uqcpq1].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='1' param='[federated.022gvv119xq82z1h1iv331uqcpq1].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Category:nk]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Country/Region:nk]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Order Date:qk]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Segment:nk]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[sum:Profit:qk]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D68D8B6C-6CCC-4C8E-AF08-3A53BFA499F9}' />
    </window>
    <window class='worksheet' name='1c'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.022gvv119xq82z1h1iv331uqcpq1].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='6' param='[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Segment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Category:nk]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Country/Region:nk]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Order Date:qk]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Segment:nk]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B6FD3B5B-8C2E-4402-99A4-C2788A60F922}' />
    </window>
    <window class='worksheet' name='1d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.022gvv119xq82z1h1iv331uqcpq1].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='6' param='[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Category:nk]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Country/Region:nk]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Order Date:qk]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Product Name:nk]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Segment:nk]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ECFC89F7-D09B-409B-8F5A-CD393C5C9131}' />
    </window>
    <window class='worksheet' name='1e'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.022gvv119xq82z1h1iv331uqcpq1].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='8' param='[federated.022gvv119xq82z1h1iv331uqcpq1].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Country/Region:nk]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Order Date:qk]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Product Name:nk]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[sum:Profit:qk]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B94829FE-BD15-4D0B-BE1E-AC556C4CDA31}' />
    </window>
    <window class='worksheet' name='2a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{92E1A5D2-9167-4CCB-AA06-E5C62A1A2A57}' />
    </window>
    <window class='worksheet' name='2b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.022gvv119xq82z1h1iv331uqcpq1].[usr:Calculation_1148417931643600896:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[usr:Calculation_1148417931643600896:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8D186E87-4053-4898-A41D-460DEED7A9D7}' />
    </window>
    <window class='worksheet' name='2c'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0FBE3A58-15D6-41CA-8894-A2C4BC4187CB}' />
    </window>
    <window class='worksheet' name='2d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Country/Region:nk]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Region:nk]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FD655F57-7ED4-4005-A887-BA4410372A55}' />
    </window>
    <window class='worksheet' maximized='true' name='3a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.022gvv119xq82z1h1iv331uqcpq1].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Sub-Category:nk]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[qr:Order Date:ok]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[sum:Sales:qk]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AC1CEF7F-FD18-4B95-846C-70A67B1CE620}' />
    </window>
    <window class='worksheet' name='4a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='11' param='[federated.022gvv119xq82z1h1iv331uqcpq1].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[:Measure Names]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Category:nk]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Segment:nk]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Sub-Category:nk]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9F6A3E00-5E81-4268-A6E5-906CD97DB37E}' />
    </window>
    <window class='worksheet' name='4b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.022gvv119xq82z1h1iv331uqcpq1].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[:Measure Names]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Category:nk]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{22395737-B8CE-4111-9E3E-D1FB0B7F8894}' />
    </window>
    <window class='worksheet' name='4c'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.022gvv119xq82z1h1iv331uqcpq1].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[:Measure Names]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[none:Sub-Category:nk]</field>
            <field>[federated.022gvv119xq82z1h1iv331uqcpq1].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EB7D77B7-7223-43E6-9C81-B6A803185A39}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='1a' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='1b' width='192'>
      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
      UpRnpLtviP8PwBdZet6/1jEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='1c' width='192'>
      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
      ur1yGjQb/D/3CovXUlsR3AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='1d' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29d2AV553v/Zk5vatX1FAXAoFEb6YY24BxwXbc4pZy8643u8km3iQ3d9+9
      N+/d3N3NbrLZbL2b5sRxYjuuGNNsOoiOAIEaSAgJ9V5OnTMz7x8CGWwQAiQO0pnPP3pmdM7v
      +c3vzHeeOs8jqKqqoqERhgiCIIihdkJDI5RoAtAIazQBaIQ1mgBuQHNzc6hd0BhHNAHcAK2P
      YHKjCUADgIH2Bi6094XajTuOPtQOaIyeX/74v+MxpeDxG3np5ReIsxiu88kAJ46eIndGMRbj
      6J5x5ccO4Zp+HwB9TeW88d4uVL2eGcvWszAvfoyuAHqbztGpiyMrwTlmNm8HTQATiIA1kRde
      /Crl7/0nlU1egvIJSsubKFl2H1PMg+zYvg9JH828FSWoigJCkBN7dlLvNrNs2SLa68pobW7H
      bYxn+aISzHphyLDUTXOPkcL4oZuy48JZdImzeP6heQiCSH9bLbv2nSB5xkJmpTk5un83zf0i
      0+bNgZZKapv70DmjEfvbsE0toSTVyt5du1Cjc1lQmEh5eTldbT0k5xdR88lrlLlTePbpR5mW
      Eh3CaA6hCWAiMdDM+++8RXubgWciOvjF379HTIqDV18LMj2yhYQ5D9G7bzMN/VmcOnIEY7CT
      UwNRLIpp562PT2Dv2EvO4ieo3fMerdMKSI+xAtBdV4U+LQeHYUgQGbNX0fLJZn72s39hyYOP
      UP3Ba3SYIzh44rf0LcyilRSmuS5SXtGAeraUtCUPcWDDLu5/fB4fbi/FHd3CvjqQ+o4gKo9w
      6vQFHl6cw6ajJ1mck4NfV0RmvCuUkRxGE8BEwhbD9HQXH/cZcOiCiM40HvzCo+gR2LHhdeJi
      o3ELwKV2u+T3Y7K7iIrw4m/wYzNYiI2OxmYxcGXbvup8M7nTC7lUHjDQ20fewnWkxHzMxhNn
      sGJn2dovkGRRqS/bgyM2BovUjOpT0RtMREVFYrM4iI2LxiCewxdQmLF4DQumOlAGOznriiAm
      MhKd2IrVbEaPCZNBd6ejd020RvAEoqCwmLy5D/DEwjhOt9h46J5ktm74gMrGHpYvXcDuD97g
      QF07RtFE7rRpZM1bSXRXGe8e7uLRe2eRk1OA3axnanYBDvOlZ5/UTXO3nuQ4x3A+guxhx4bf
      s/OczMOrVnDfQ4s5tWMjpeX1ZM6ay+CZ7Xy09wyiyUxabiEOi4XcwiyMBjuF+VNZsPJh/Gf3
      sHX3cWRzBPlT09BbXeRnpZNYUIJSs58T9Z0hiuLVCNpcoJFpamoiOTk51G7ckKaKUrbsO01E
      xkzWLp+NWT+6Z1tn5T72dUXz8OL84RJgJPrbz/LRhzsJulJYvfpeYmzXa4jf/QiCIGgCuAET
      RQC3StDvQxb1mAzhVxvWJsPdxbS3t6MoyrjnozeZ74qbv62tLST5agK4S5FlOaxGoYPBYEjy
      1QSgEdZoArgFJHcnO7d8xMZN22js8lz3c6qq0NPTM6It94XDnGm/tSe9t7mSt977gA0bNlDV
      1D/CJ/10d7tvKY9PUag/fYiNH37I9n1HGAyM9NEA3b2DAPS0naO5y39bOauyj2Nlp1FQqDj8
      CSdqOwn6BzlTde76LigBei/5MBKhr/xNOBSaz54lde4KMiKMKIpKT2s951v6mZpXgOjupq2j
      FY/gJNUps/3ACTLyiylIdOGWPQwEbFj8rTR2+5iaV4gp4MVvVGFUfTBXo0oqRUvvIzfaAkBv
      2wVqL3YSl5pDskugquos2GKJNnay52ALBTOnkZuZyig7iD5DgJYWN8VL7yXaDHpdkJbztbQN
      qmTlZKEMdmOKiEPqb2egr519ZQ3k5eYT4/DSWF9Ne4uJ3NwcLIabv05BNGAPDNLt89Mv2zC4
      2wkM6Ajq4/APdFB59iKxadkk2BTOVJ7FGJmMU27mwIkW8ouLKchIvK5tTQA3jULvoI7MKAsi
      oEi9lO4tRTZaaBmUmarvQ4rLIFB3Hs+86URFR5MUF0l37RnKsTIvN5qO1g7am3todwssvf5v
      Mwokju7aQrVBR07JMlzeHtpam7nQ1o8uO5ralh4ys2OxOiOIipKJi3Yh3vz9dwkT04oyOX5o
      F0LEFPKTrdS1e0mKgBOVF4j2NRI7K47+CxUoUZlERccSHxeJMtBDQLBgV3tpbh0gM+UW5gAJ
      OuITTNQ1dGGxRSAH/HQ2B4iams7R0s10+UXK67u4b5qV2g6Z/CgBe0QU0dFB4iIdI5rWqkA3
      jY7YSIW6hh7kYAC3px/VGEdxyWymZ01BNEWQmZlGUrQTvc2J3W4nPtqFIBqZPmsmETaF1l6B
      6YX5yJ7e2/TFwOxlD/DQQw+Rl+ygubWbvGnTMOHFHJtGwdQEGs+fQzVYcdicREU4b6GcuYyM
      aohi8cp7idX30drtxe6KITkhFsnvR0VFkQMMDPow2xzY7U5iolzojGZS0zJISIpFJ996r5Y5
      KomB2mMYo9NIMAxyvNtAgknBHdRROLOYxcX52JNymZYaSW1lNUZnBHa7k2iXbUS7mgBuGoH4
      rEKkC8fY8sle3ESTkajnxIlyejxB7C4XOsDicmESRexKP1v2n8LsisKmE0Aw4TR4qKjvJjEx
      Br09Bpf51m5LndVMVenHl9oAA0Q6TVTVNBAZG48gDVJfex6DLQqTMQKjVM++Y5VIt9yxpNLZ
      UMHWzdvoE2PJzkpH6a7h4wPVZGWmEh0XyZGdO+lVbZjNVuxSK7tKy8HswGrSYTTasFpvfdDM
      aHZhMjlJjLcSNSWRCJsdg97E9OwUKk6U0dDRj+zrp/ZcPbboOAyiFaX/HPtP1Y1oVxsIuwGh
      GghraWkhLi4One7umDMz3oQiztpAmEbY87lGcHNzc1gNwNyIgYEBmpqa7ni+g4ODyLKMINx6
      rX0iEao4a1WgG6BVge4MWhVIQyMEaALQCGs0AWiENZoANMIaTQAaYY0mAI2wRhOARlijCUAj
      rNEEoBHWaALQCGs0AWiENZoANMKaMH0lUsXd202fx4/e7CDaZUKWdeh1Kl6/hM1qCbWDGneI
      8BSA6ufUkWOIkVHYIpMwil10dTmxC020KrEUZWkCCBfCUwBSgIDZSV5qGg5XBAFPA10t9bQb
      9cyek4Cqqle9E3EnVmj7LJd9CEXeoSBU1xqeAtCZSY42c762mgHJysxpdjrbW3GkZgw3ii7/
      GIqiIMvyHXdRVdWwWh3u8vXeacJSAJIkIRhtZKRFUlndgqIzkjtjLnrpAjWN3eSlRqHXD4VG
      FEUMhju/ArIoiuj1+rB5ISZUcQ5LAehNZmx6hfqLneTNmkGkVcEab8BmKaS1c6QV1jQmG2Ep
      AEHQkZCeS0L6p+eMxqG/SQmxIfFJIzSEpQA0bo2Au4st77xJRZfIY888S3a8A1WROLVnI1sO
      N7Ds4SdJ8p3mF+/uRQlKZC1Zz/riWHbsL6Vw0Xoy40yhvoTPoQlAY9R43INMX/YkS6WzbK++
      QHZ8IVJnPeWDUXzjz5ax+b1PyP7CE/ygaCUNZ0pplOPo7+sjMTmKgQEJ7kIBaCPBGqMmIi6V
      BKePA2d6mJWXAoDeEQVNR/nRj/+TirPldAyAKg1wpqaLgrxUkrOnk+C8+278y0yiEkBFCgTR
      Gw2ochAFEb1O0/dY4u9pYtfhKmavWEmsfajRJJqjeOarfwGKm42vfUCkHVrPV2FMziXSGGKH
      R8EkEYBKwN/NjncOMevR5bhrymhlCguLUkPt2KSitnw/n3x0lIOleyla9SQF1i4saYWc3fZH
      9lY1U3TvF4jT+9lX3ca0VXOAIIc3/o43tu3Dbz7Il1/+bxSnR4X6Mq5ikiyM5WXnH3/HHzcd
      J3laJmaDg7VPPkNewshLY48GbWGs6yD1sH3HGRasWox1DArakeKsBH0c3Po2O8vbWfvUS8xM
      jwRUBttq+NWv3yNz+WOsmZtJ05l9/O79fcx7+AWWZNnYt/1DXDMeY1aq9Zp2BUEQJkkJoCNr
      5lKecmRgS47HiJ4Y2yS5tLsVQyQr7198R7IKBHqxTVnMtxfpeXvHQWamrwbZz+bNpTz28tfZ
      //rrNObZ2bCznm9+7zuokkxfSzWxaXE0tvnhOgKASVIFUhUFSVKxWKGhthYBI5a4JGIc2qS2
      28UvBVGUsa8kiIKAyTi6289sjacwz83+XbsoKJwFgBoMIMYlk+y0s2Cancpz5+ju7OQf/+4f
      WfHESyzMnYGjbZDGhpFtTwoBtNaU0+Q14muRWbp+LU5A1E2KSws5/+PnOzh7sXvM7abEOfnX
      b64Z1Wdlv4e9Oz4mZfb9ZMYOPc0FUcTr9hBUFLq7BKLSHeQWr+DxBzL4t9+8z8LcF0Zle1Lc
      JZEJSTS+/Qf27TtL6fkyTFhY+YWnmDM1PtSujRMqnRfOsOd0K2vuvxfzpV+x49xRXnt7E7b0
      BTy3fgV1Bz/gw0OtrH/ui2RFCWx753VOdph57vknSY6YOKVjX+tx3n5zO9EHT5A0cyWPz7DQ
      aMpjbqzEX//1/8KWVsJ3kvJo3vnv/PBHAyQX3UvdwQ/41Tsf0tAfi2j4OvfNvHb7YsRG8GDr
      WXYdqURRHSxZvZRIw40bZKqqoCIMb8Vz55b3lmipb0U2qFgcMUQ5LGOS993ZCPZx5EA5XX3N
      LFz+MJe72TvamrC64qjZ8g6elGhqLkbxzL2pfLBhH3PnFeDXR5KsVLOhLo5nVuSOyo9X/n3b
      HSkBRh1nxc/ujz5h+uq1RN3m4/uGjWB3u5dZD6wm2WCAS/PTBWBYMaoKgjD0vyGDeLsu0i3G
      MthaTVLaNBzWoSw++z1VEBBQL5kQxuBmFTh7+CNOD9gJ9rWzcP2XmJ0ecZs271bMzFkwh13b
      P7zqbKxLz3/99B8YjMvjS/cUULbtV/zdKQMBHSxeu44UYz/bN7ZTvLgoRH6PAaKJe9atHTNz
      N9DQAHs3fYTVFMPKIidH+qawLKWf3ZUiseJ5Gi72kzmnkMrtZehdCqa4WRRF9NEl+qgsK6Oi
      povFsxOo6I1kWabK7nIfU2yt1JzrIXX6DLxNtbT3DxKfNZuS3MTb2MANwEdPr5VHnnsG98lt
      nG/vgUkrgGujmuL46l9+h+Pb3uR0l5k//d5fARLv/+51TMEOPth5isUPrCPOfvePUI1n7/yV
      D9sbCMDBkjVzh0qA9vKr/iOrZhbdtwinuZfBgjkUF0dz8ngDKqB3JFBcUkJS2jTs3joqrtgM
      UVFNzF62CpevjreaOomwmQkG/CjA7fV425m7NIu3/+tfMMek8Nj6tNuydnfTy2s/+g+2nyln
      65l+/nJ9MVXuKMRzm/jkWANSUM+j04N89Oq/cORcK9PWvkTzwY/Zu/c0p8oOULjqaR5fNLoq
      UKj457cPsbOsfsztCgK8/8Onho9HX4uyRdKxaxeba/wocQuIc5gxitcfARF9vWzfuosFS3Lo
      qznEpvMBAq4ZpEQYMep0GCOTiLdU4Bd06HVj0U7w4wnG8dU//3NM3Mm2Ryhw8cVXvsuzAILA
      yZ2biS9KY2rOi8xdrQ5fe9GLf8aaS7VUyOLHDww9VSd3bG6OEQUQN336pwfWZB57/BHgswGM
      ZtZQ1ywzZg09VWIB4pcwdcbQj7HukUuNG+HKxrGTVeseHWoXXHH+1tEz0H6aI6qBksxYDCYz
      hkk7F0hAED+N2czlq4fOXqMtdeWhduN/nhEFIFwdPcTrBPDy6c/++/L3rxf4K3/E20fC65Y4
      Xb2JM/stLFyzjhmp0WNm/W5Gu7FvnUkxDhDob+G1X/6Ki4MKeYse4gsrisZQWHcHG0treHXL
      iXGx/eOX7yMtIbw6DC4zKQTQdv4sSbMf5YW5sbzz6h76VhQx2X5OWVGRguOzbMgkmA15y0wK
      AaiCn0Ob3qLisJmG6mbqftzGfeufoCRDe79XY2QmhQCmTFvOd/5q4RVPMgGj2RxCjzQmCpNC
      AKJOj1Wb/qxxC0zWfkINjVERno9NJUD5oX2ca+0nKXc2eckqPT0OoixdnO3SU1IwmUeRNa4k
      LEsA/0AfPlsCD61bBb3tBFSZgKefqtpu8nJSQu2exh0kLEsAOShgsZrR6Y3YkPEFfRw7eIzU
      2Qux6UVUVUWSJODTxXF9Ph+yLPPu/jp2nagfF79++vJyXE4nAwMDw+f6+/sRRZFVszOYmRGJ
      KApYLFbcbjeiKGKxmHG7PYg6EbPJjMfjQafTYTKZhtJ6HUajEa/Hi16vx2Aw4PVeTuvxen1E
      O4xIkoTX68XpdOLz+RBFEZ/Px3eemoeigN/vx2g0IgjCUNo0NKEu4A9gMplQVZVAYCitqApS
      QMJsNiHLCpIkYTabkWV5KG0xoyoK/f39WCyW4VgHg0ECgQDBYJCXVhfx+JJsZFnGarXi9/uQ
      ZQWrzYrP60NRFGw2G16vdyhtt+HxeFAVFbvdjtvtRlUvpwdRVXA47AwMDNLf34/T6QTCVABG
      s0BvZw/eBCedskiS3sycxSvx9dVxsSeRKZFmjJfWShRFEZ1Oh81mA8Dtk+gZ8I2LX3a7A0EQ
      cDqduN1ugOEfCiAtOW44HRNhuyJt/9RI5PXSVy4QcGX6U/uXF6c1X+pBMxqNV/x3/DAYDPT0
      9KDX64cXJQZw2a98aeeKa7nyeq+IA65P09Eu6zXTUc6r3w8OyyqQ3hpJZoyenXuPk56Xi9lo
      xxnhILdwGgOdbWE9MBRuhGUJgCCSmFVEYtblE3aslx4M+dmuUHmlEQLCsgTQ0LiMJgCNsEYT
      gEZYowlAI6zRBKAR1mgC0AhrwrMb9DbISIxgbv74LJSlvdl459EEcJOsmZ/NmvnZoXZDY4zQ
      qkAaYY0mAI2wRqsC3SbBQC/7Nn9Mk5jEs+sWASBLvbz2z//E+QGV9h4L//tvX+LDX/2W1oCV
      h556kWzfYf7iP3cTY3Xyle9+ixSrVvkPFZoAbhNB1JNZOB9vfc3wOZ0hghdf+QFBbyfvbT2O
      rvoA1oUv8e1siT9u3YPN2cvz3/8B8yJD6LgGoFWBbhl3Rz27du+lP2gnKTnq8+sQqQp1h/eS
      XrIYR/Ycenf/nB/9x5vUtbbgF4K889O/5h//7TW6fNrc01CilQC3iCAMvSdwvcqLLA1yql3P
      I/dY0SkGXvz6d/F3nuSdPQNEF+XxNyu/SNPH/5c95308mj9xNquYbGgCuEWsMaksWZyKr6ua
      n/z0NRr6+qnthnvj+gnkryXdW0HS9KXoAUXu4/Wf/ict+lhe+MqX8Fwo5Vc//7+IUZl8ebm2
      fEsomSTbpI4fN7NDjCoHOHyojFkL5mG8zXbtXb9N6hgTip14JtE2qXcHgs7IvIXzQu2Gxk3w
      OQE0NzeP6+4cE42BgQGamprueL6Dg4PIshw2Kz+HKs5aFegG3J2b5E0+QlUF0rpBNcIaTQAa
      YY0mAI2wRusF0rjrUf2D/O6XP+NcW5CZK5/g0aX5KJKX9377r5xqGMDvlXnpu9+nZdcf2VvZ
      zOKHnmNhmsqrP3+NYHwJX3n2AUzXedRrAtC46wn4vNgzSvjBy/cPnxMNFh778l/yqORm4wfb
      SXJKCIX38b3VRt7YuI8T1QPMff4vsBz7A/sb/KxIN13TtlYFmqD0tDVSVVXFheYulEv9eAF3
      L7Vnq7nQ3DG0pZJvkNa2DoIKuHvaqK6qoqqqiubuwdA6f5PIioczOz7ghz/6GcfqOq74j0pv
      4ykMyYU4DC7Sk03s2X2YWXPm0ixGMCPOytRZuXTWd17XtiaACcqWd3/NgSPHqalvHRZA49kT
      HDp8lI2vv0FFeyeln2xjw8YP6PFBf3sjJ44fZ/eG19l4rD6kvt8sJnsc3/zBT/nWlx7k0P59
      w+fVYIADx5tYMHsqsuRh3+59ZM9bTmFGPBGBQRo9El0NTTjirz/tVqsCTUgkBH0s8xcuJDkp
      icvbIWfOWIDRcZ4jB49jMVi458H1GHd9CEBi7myezJnFrs0byJ49sV7plAbbeOu1t2nslZi/
      5glaynfTFFHCNFsb+rg8Igzg6axh43s7cBw+TkzBEl5ams/P/uGHCI4sXv6G9bq2NQFMUKYk
      RXJk7w526aJ48emHsegFCHooP3ISn86M/hpDPL62SnqMU0mIvHZ9+G7FHJnOl/78laEDxc+B
      nY1MK7Bj0dm5f+nQaWvMLH7yi1lXfe/7/3PmDW1rVaCJiK8bIvNYsngBxuAAkt9DvydAXW09
      2XPnkWHqprqlj46mi7S2tXOxpQ1Jljlx6jwzZ2UxoceWRRMLVi7HOUYXoZUAExFzLHGG0+wp
      7WDpmkfoLttOZUQJxRbYsX8X1qQi7s91sP/dDfS4BXrKjpOZtJzEjGkkRdlubP8uQPX1oUre
      cbEtOhKG09pcoBswEeYCtbc1ExGdgFE/cQv0z8bZu/X7BCs2jH1GgoDjm+WXkmE7HVol4PXg
      DQQRDSZsZgOKIqATh3ZjNxoNoXbwpoiLTwq1CxOW8BSAGuDY7l14LHacsWlkJ0FXlxOXoYUL
      nghK8kb5AowqM9Dbi18GZ0QkJr0IqMgBHz19g1gcEVhNevyeAfo9fhyuKMwGAe/gAKLZgdkw
      +id2sOEgwbPbbvGCR8Y472uI9vhxsX23E54CCPqRI5KYV5iD0WzGM9iAu6eNdinA7PnJn3sf
      QlGUa5oJeJp4//UN9CoSrrS5PLduAShBtr37GrVdQfzGeP7khcW8/fO36NcF0cUV8vgMK1sO
      7MaS/zXW32BZCFVVh/OWO6qRTr01Ntf/GfQzngRr7LjYvhmuivM4VsyvzCc8BSAYiTB4OXRw
      P7IpjpICC7U1lcTmTx/uIQkGg8BQsC6nP4toTODRZ5+m8VwZZW1D31ElH81ugUfWr+fC9rc5
      2RvBk3/yNfz9LWzaV4krcw5fiJDZXCtd1y6ALMsEg0FEURz2Y7yQg0GUEXy5E3w2zuN5vVfm
      E5YCkIIyjtgppGVZOH60BkkXwYy5S8FTR21rP1mJzuEdE0VRHN4x8vPInNu/n921vRTMnD/0
      OaOBR5YV8+Y7byN3XaBYMTLYeJRtFYOsW/cARj0oRgN6vXEEu6DT6TAYDMON4IBOx3jdonq9
      Ad0IvtwJPhtnWScyXhK4Mp+J221wG+iNZnS+Ho4cryJz5kwiLZFEx9jJyJ+OUXaP2k6gqwUh
      az5PPbiYU6eOoQQlAkEFfUQaTz/9KII1g4LIdrYebGPtshII+AgGfAwMevB6BvEFZG1HyhAT
      liWAIOqYklPElJxPz5kuDY6mTRn9Gj2CyUjlpvfYNqBnzWNPUrH593TMWE9G90k+2FvNyqe/
      iFPqY6C1iv/6rypcmbNZMzXIHz4+AZRRGvsMy6drPTihJCwFMFYY7HGsf+5rQwdKkPMzVlCY
      5oC0lXxj1spLn3LytVdeuep7rxTde2cd1bguYVkFGhdEPRlpKaH2QuMm0UqAm0Q6tx2l7fS4
      2DYu+DqCOKFn6kw4JpEAVFSVoX2GLvXjj8eaOnL9XqTyt8fcLoBx/sswsaeqTTgmURXIza53
      dzAAtJ49zqHyi6F2SGMCMElKAA8fv/4b3tx8nB1VBzGKVh557kuhdkpjAnADASjUnjzI2bYA
      JYsWE2vT01p7kpoePfPzEzlQeobCpfOJNoV68piBwsUPYIkpICorFZOgIyZKW3V5rFEVierD
      O+l2FLBw2pTLZ6k79jEf7D3P/U88RX68kb2b/sjRRpnHn36aRJObvftKyZ57PymRoR1suxYj
      VoG6Ko/QbEpjxaLpHCstJSCrNLYNMHdmPvUVVUydU4K5/yIXe/x3yt/roDDY60XUeyg7eJCD
      B47S3OsJsU+Tj/72Bjz+IO0Dn8ZW6qjlQJOBr7z0MKd37aCxowlnxj28tGY6pUdP0XC2Gr1N
      pKs7EELPr8+IJUBtv8rc4gSMBh1JTiP1NWWUn66gT4H2ygrEBjeLihLwRio0nD7A8dp2EjJm
      EKlc5FxTH66ELOYX56Ef5/VdW2rO0CNaCQ7YWPfsWpzjm13Y4krIpFgfoKn20x9UZ3Xgrj/M
      f9ScQPH1UWR+hOm5A+z9uJyCgjlkZsRjqNpFdwj9HokRBWATVNyKigkIKDKZmUXM8UJ+cTE1
      Rj1xhcVYO2ppBNr6A9y/9iHMul7e+/U+dDEuvF43sgz6cW5puKKj2frmHzh0qI6d1YcwY2HF
      E08xZ2rc+GasgWiL48t/8hcEgl62/+E9bPSwc0cpmXOXkR5jD7V7N2TEWzMnZwqbt27BbABD
      bM6I89ej7QZ2f7KN2NQcEtOc9EhmrFbLHdn93BqVyvNf+wbLVjajd5iw2CKJcFx/JQCNW6Pr
      wgne+s3vOdIl4vE+y7ykIMbYDGp2fMihmgskFa/Gd24f27YeIu50Fdnz7yPVV8U723bhMZ9C
      99XnmZ4SEerLuIoRBWCImMKaB+IIKmAwGtEJAgVFRYhAbskcBFFESMkhSxARI+eRnCMh6Azo
      c1MISEFEnZ6beOfj1hEERJ2B5spdHGsVkD0DLHviJWamaJWhsSQiuYAvfvOveBbQi372bC9j
      wdQiFq55jJL7VSxWK4Iynf83dxkqoDeZ0atZZM59AAQRs+XueyjdoHIioDearvrQ5em5w++q
      CrqhoRtBh8n86SCOWXene1h9tLcbeOzF5/Cc3EpdSxdoAhhTdHojDuelnhxVYeXalRj0Iuit
      DPfviFd8BgAjxru4Q26SjAMA2Fjz3Hq6O5tw5SxguePur39OBKSaraju6y8teKt9O4LZhSH/
      wVv89tgxogC6zpdz4MwFVNXAvJUribOOUi/d59jf4aQkXqaXCBIi7sQ2oH4ObNlJ3uq1xJon
      0QB3iAkcexWltXzM7YpRmXe/AJpa2smeuZDMBAeCGKCleYCEJDttzT04zQJnG2rxKi5mFeXS
      e7GGuoudRKflk22RkYIKqgyCAXx9bZw8c5bYjEKS7UFOlldhi88kLzNxDGe+CCieBv71x/9E
      dsoU5qxcRX5y1JhZ15icjCiAgpK5nDp6mM2nRBavyOdcTS/xSUbqahqYGqeD6DBCACkAAAv8
      SURBVFSS+85zpmEAWlrJyJ1OTeUZkqbGAODpaqPTYaS2bDetkpna5r0UZkTR4xNIsJqvu8n0
      TaPKNFSeos+WzjPPzCTWYcHm1Or/GjdmxLrCoNtP4bzlzE/T09AroygykrufwYACGImMjsRu
      MSGrCiarHVeEA4MocvWiCgpBwcbs+YtYsWQe6Zn55KfHcLbyJO4xGhzsrj/Fpv1VRDlldu46
      gSMmCotxEjVvNMaNEQWgeLrYsfUjTvU5yImJI9LUzO7D54hNjEbAw+HtWzneqmNaiov+tjq2
      bv4Ee2I2NlcUCREWTK4oIiw2phVOpeLoAc5e7CLg7qGq6hz2uDQsY3SPDvT2EpecRWZuDpau
      NuqaWhj0SWNjXGNSM+ItGDUllwem5A4fz1i0ihmX0gNNZlY8MJOoS6snpOXPZfaU9OF+/zwH
      gAs7QEQ+D6TkD9u5Lzlz7K4AcMTGMnj4AFtaBAIWif1bdjD//tUUTtHaABojc8vPYMdn1stM
      Sk2/XV9umagphTz/tcKQ5a8xcdH6CzXCmjAVgMpgVxPHy07R45YIBNwMDgaQJR/tnT2hdk7j
      DhKWAlB8/ZysOE+EQ0/ZySrcng7a2vpprDlNbyAsQxK2hGVfod8TwBGfwNTMVAbaT+GVzZw7
      fRxnajrzEl2oqoosy8CnC9RKkoSiKIix+cip96AoCiazCSkQQFFUzGYzfr8fVR0hbTHj8/lA
      BYvFgtc7tAHE5bTPH8Bs0Q995hJerxdBENC5UpGmLEEQBEwmIz6fH1EUMRgM+P0jpHUier2e
      gD+ATqdDp9MRCFydlkQTajCIJElYLBYCgQCiKCJJEmpCMVhikSQJvV6PIAhDacPQrROUghgM
      BlRVJRi8ftpoNCArCnJQxmg0olhj8Xq9GI3G4VhfXg9VURSE2ALk1L6hOJtMw/G/Km02EQgE
      UEcZf4vFjNcXwOv1YrEMzU4ISwEIAsiKAqgogoAoirgiIpG8gwRVMAgML0p7eWUJnU6HKIro
      Z3wB3bTHUFUVvV6PLMvDaeMVacOlBVhHSuuvkb58/Nm0fuo9OFIXDYlBp8MQDA6njddIi6KI
      UZaH06YR0qIoIgjCcF46nW742Lj0WwiCgHzpczC0cO310jqdbvihMZr0ZT8ux/pynHUzn0E/
      46lrxvnKtOkm46//zCLAYblDjCK5OXLgMKpBj98QR1GWia4uJw59Kxe9TmblTRkepZ4IO8RM
      BkIR57DdIUY0WJlZUkxnr4eo2DiMuiAWiw6j3onZG+r3mzXuJGEpABAw2Vwk21yXjnVcftA6
      7WEakjBF6/LQCGs0AWiENZoANMIaTQAaYY0mAI2wRhOARlijCUAjrNEEoBHWaALQCGs0AWiE
      NZoANMIaTQAaYY0mAI2wRhOARlijCUAjrNEEoBHWfO7tjytfyNaAYDAYkpgEg8HhF9zDgVDF
      +XMCcLvdd9yJuxlJkkISE0mS8Hg8wy/lT3ZCFefPCSA6OvqOO3E34/P5QhKTQCBAZGRk2LwU
      H6o4h0f5qqFxHTQBaNz1qEqQqoOb+du/+Xv2VbZcPkvfxXL+6W//D+/trUCRfZRu/B3/+4d/
      R2lVK/6BDj55/9ccOT9ytUpbAkFj1KgDzfzbz1+low9WPfUSi/MTkfpb+M2rv6axy4fBlsBL
      X3qSIx+9wdk+C48/8wTBulLe3naY+ILFPP3wMiy6m2/TeHousKfCy7e+921UWRk6KfvZuuM4
      T//ZNzjw+9/TWBKPM3UJ31th4w8f7iPfmktKzhTOdwYgw3Zd25oANEbNQHsbUxc/zNfnThs+
      Z3Am8pU//z7yYAsbd9bQe7EM89RVfCWpj20nKlhZWMy3vrOMo5t/S0XrIkqSjSPkcG28fRdo
      a6jjH/7+Jyxf/0UW5SehBgPoYhJJsNuYnWeloS+KeTkGSnfvZfqsuUSmJmFr6+EGBYBWBdIY
      PW7PAHvf/jk//vff0djtueI/KnXVFSRk55KenEXz8bf557f2k5mejlnfzy9+8n+o9KaTl2C4
      pXz15ggK593Hd7/5ImUH9wIgiDp8g4P45SBt7SqRNh/7dnxCcvFyZuUkjdp2WC6NeDNoSyN+
      SlAKoAo6Bs7tZ0O9hRcfmAOA4u/iw02HWbluNW0ntlIv5jMnqpN3T3t49v55iAQp3fYe1mnr
      KEl3XNP2SHGWA242vflLyur7yFn4ICuSvVy0TcfVsINXtx7HlTmP/2dNPN//y18TmRZNTMES
      1qa5+fW7m7g4GM3T/+1PuW/m520LgiBoArgBmgA+pa32CG+8/TE9PpFVTz5PtKcWS/ocdG2n
      aJTjWVCYRlf9CX77hw/pD4qUrFiDqaWMA2caMLoSeeqFl0iPvHYVaNRxVvzs27abwlX3EXGb
      odEEMAo0AVwHqYftO86wYNVirGNQkdYWx9WYWBgiWXn/4nEzrwQC8JmlzMcK0WodTmsC0BgR
      xe+H8agkCAKiyXTdf/f84pe49+wdl3xT//D68KEmAI0Raf///oZAbe2Y2zVMSSbxH/9hzO3e
      LFo3qEZYE6YlgMz5k4cpv9CBIymX+dPi8HjMuGxBGjsGyUhJDLWDGneI8BSA4qfNbWHNQw+h
      B3p76+ntCdJRfw7b1OJQe6dxBwlPAUgB2luq2bKpg4KSeUTpfBzZU0ra3EXkRZpQVRVJkoCh
      jd/8/ju/bZIsy8O7NYaS8eolV1T1qrjKsnz1saKMS77AVfmEpwBMETz02JPIgQFK95zAPDuF
      WXPn09Z5Ea+ShkUUMBqHBmxEUcQ0Qm/FeKHT6TAajSEfBxivF3JEQbgqrjqd7urjcRT+lfmE
      pQAkbz9HDuyle1DGEJOBBfBaIikuFDhWVsOikhzC4z0sjbAUgN7sYMGy1SgqiOLQrR7hAohg
      0U28lOQfbOBXP/sNrYEgOfPW8ezq2aDKHPn4LbYdrMEbdPL1//6nvPGjb9OjRJOz8BEeSPfy
      /vbNuEq+yePzosbl+jRGT1gKQBAEEARut3JhtKXwte/9D7rOH2fLmcuzI0VmrXiC2fcKHNnw
      R/olmdQZ9/LNRx8GQFVkXohS2TL2Xesat4A2DnAbCILCyc1v8MsPj5GVkXb5JKIaYM+mP6Lm
      LSPTGqTv3FH+1//8Aa9+dBBB1A2XOhqhRxPAbSD1dhKz8BG+/eWHOXp4/9BJVebQJ9tIW7Ke
      uXkJ4B9k7vpv8Fff/VP6L9aE1mGNzxGWVaCxQhVkdv7+32kYMLDu6eeo3vI7GrPWInU3suUn
      P0TUGXjm5VdoL3uNd94c5PGXvsKFoxv51YaDBJXNiMavsro4RWtwh5BJJACJ9ovdRE6JJzjQ
      jVexEOWyjGuORlcSz7/8ytCBEqTaO4/lmZHosv6M1Vd8Lvvxr7L88kHig/xg9oPj6pfG6Jkk
      ApBoqC7j/TdKKVyzCE9dBabMe1g1O/3OuSDqyc3NvnP5aYwJk0QAKp7+frwBL71dXUQkFzC7
      MGVccvKdqUC6eHFcbNtX3YsQJksh3i1MEgFI9PfqKZiRzPlz52jmIlEpGcxMixnznDylpQxu
      3zHmdgHsK1eAJoA7yqQQgG8wQFpRIfF9qcyPiUSPiMVuD7VbGhOASSGA3sZKNh2pxdPYx4w1
      i3CgJzkzE7PBeuMva4Q1k6K8jcsuZvHMdGR8tDc10dTUwqBvfN4n1ZhcjFgCnNj7ESdrWrFF
      x1C04F6y46+9xFz16dNMLSzkhsse9dZzsM3M/NyEW3T32oh6MzkzFuGyOdlRWoYYl0VshFYF
      0rgxIwpg5pK1iLpSUmbPJdKoo/V8BQ3dCtNmFKD3dlJedZ6YtDzcva2cPOohMjGb1AiRhpZm
      unr85BROw+DrpPLsReLSc0nRB/FJMrJ/gMqKKgRnErkZSbg7LlBd30FkUhqxNgGzIwb8A0g6
      Ew7LaKci+zi65zj5y+7HW13K0cpmlhdNGYMQaUxmRt0GkPvOs/NgJTaznz7FisNdT1JOAXaz
      niavnylTp9BSX0NU0E59n0Cu1Uttew+B2mqS83K4UHWSiKw4AM5VnER0piN11NNg8tF0voep
      2VHUnGnGlmGg3adH33Mee2oh115H7FroMBkC1J2rJdjaRXL6za9BqRF+/P+U61GxceY6PwAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='1e' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='2a' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAccklEQVR4nO2d13NcWX7fPzf17YhGzpkASDDHIYdDzuzMhtHualdar1SyXY4PVpX9L/hR
      VXq032TZJbnKK6u8XkmW1i7V1MZJnEAOExiRQWQ0gAY6p5v8AAxnyOEQ6IsG0GSfTxWLddH3
      /M7vhu89+Xckx3EcBIIKRd5vBwSC/UQIQFDRCAEIKhohAEFFIwQgqGiEAAT7j2Nx/df/wP/4
      n3/NLz66+8RPk1f/LzdmMk/8LfpoiL/8i//Oz9658sTf7z98WHTWavHeCgQlxjaYnFjk1O/8
      iIGWemYe3iHcN8j88BhOao2P332Hpe4uvnP5DJpk8MG7V/n2H/xb2qsUojMP+PXHQ/SeeJ2f
      /Nc/53v/5N9wrFXi4xtjnHnjbbT1ET69O01r/zEGagze//QBhy68ib46TqQgCQEIygDFy+/+
      0Y+48v67XLvWyFFvFLmrn7HhcXrrFI6c/wbx6z/now9jxG0/piXh0RRkWSK2skyhkOCdf3yf
      w8eO8d1LffzZn/5nvG1NXHn/PcxUij/6l6/z07+4yoI/w1t/+Hv87K//hk7i1Lz5L4QABGWA
      mefWzVs4Hh0zVUD2ZvnovQ+JxbMcqJUZH/oIM6Pwxrk3qPWrDPsT/PL//Zzm9g6UmWG8DW0E
      1jMEjThX7szQ2NaI1tRNZ1cXI5++z4dXPiPjKPRWSXz4m9/iCbfhyUNnWyOSGAkW7DuOQzad
      JJUtEKquQbFyxDMFvLqOrkAilUHzBQn5vUgSOLZFIh7DUrwEPQ7JjIFH09Fkk6wpE9Bl4sk0
      vmCAu+/9I1cfTtJ79vf53oVOYvE0gXA1kplH9QWEAASVzb70ApmmuR/ZCgRfYV8EIAodQbkg
      xgEEFY0QgKCiEQIQVDRCAIKKRghAUNEIAQgqGiEAQUUjBCCoaMRkOMGeYBsJHCuz9YlfQlJ8
      yFp4lzzaQAhAsCcUIu9QWPlVUWm0usv4Ov/1Lnm0gagCCSoaIQBBRSMEIKhoSiYAy8jy2ZXf
      8qv3rpI17cd/Ty6M8YuPbpcqG4GgpJSsEZyOLxJqPc5BeZ7ptQKHGr04Vobh+QwhNQc8OQ1a
      TIkWbIfdfk9KJgDHtvB4fQQ0nWzOBBymHjwg1NjC/OQIedNGwcZxHCzLEgKoMCzbKjqNbVkY
      hrEL3nxByQSg+8IsDt0hYhXoPdNDLB7HF6oivrZMdG2dbN6iOqA9Pl/TtOdYE7xs2LJCsRKQ
      FQWPx7Mr/nxOyQTgDTZwdNAhh5dGv0YqY9DSPUBLNwwMDBAIiBdeUH6UbiBMkgjXNfH5uF0o
      GHz8UyAQKFk2AkEpEd2ggopGCEBQ0QgBCCoaMRlO8Fxy6WXe/1/fLTrdW//qfTRPcOsT9xkh
      AMEWONi2m774F2OcR1SBBBWNEICgohECEFQ0QgCCikYIQFDRCAEIKhohAEFFIwQgqGiEAAQV
      jRCAoKIRAhBUNEIAgopGCEBQ0QgBCCqakk2Hto0ct69/SswMcvHiabyKTDzyiFv3x1ECjVx4
      5TiaVKrcBILSULISIBVfxNtwmFNtKtNrBQACta1cev11/IU4WXsLAwLBPlDCwFgG3kCQsOrj
      UXZjJ3hVMrn28WdYgTp0aWOHeBEY68XCbWAqo2DgUHh87DYwVqFQ2PrEHVC6wFjeMJH791kz
      s7Sf6iaZSlFIrVHf0UVsYYpYDpr8X2QnAmO9GNiGu+ekeTS0LwW1evkDY4UaONhrksFHo18j
      kcwTCFYRT6/SPHCKRn+pchIISkcJA2PJ1Da1Ubt5WB2uAqA3WF2yLASVjdtqsyR9fe+LWBQv
      eKH4/n/7s6LOP9PewZ98/4df+7sYBxBUNEIAgopGCEBQ0QgBCCoaIQBBRSMEIKhohAAEFc2+
      jgPEUjkia6mi0vi9Gh2N4a1PFAi2wb4K4JP7c/z5z68XleZIdwN/+sff3CWPBJXGtgSQikzw
      9++8T8HSePU73+dwR+3WiQSCF4BtCWBpbJJj3/4Rx5qrkOSXs9lgrYxi3P1ZUWkkXy36q/9h
      lzwS7AXbEkCw1ss7P/9bbvv9nP/Wdxlsf/lKADsxhzH006LSSNWdQgAvOFsKIJ9OoDYO8uPf
      68VBJlwX2gu/BII9YUsBFLIZlufmGBl/hIXGyUtv0NcspjgLXg62rNCH6ptpCMhE4zHWVmf5
      7a/eY31zyaNA8KKzrRbt2twip779Y37w5lmsaJSZSGy3/RII9oRtNYJ7z57i7/7u/3Dd8nLy
      4imaqgO77ZdAsCdssxt0gp5L3+NsTyOyLD93iZlA8CKxrSqQXh3gg7/9K37yk58yPL/+7JMc
      m7XleeYia4/XbtpWgfmZKRZWYi/IrrGCSmNbJUB9+wBvvp4mVZCo8j87TEUutcLI+AKqlUEN
      XqQ5oBFfXSKZs0nP3MVbfZlaEQlFUGZsSwDjn37Ae++Ncfybh1iOFWh7xjhYPhunqecI3eos
      Q9E8zQGN6sYO/L4V7qUbCKpfDYxlmcX3JjmOsyvBkmwXvrBLvpQT5RQYy01UCHuLZ7S9keCa
      Wo6ebOXe7UdcqD72zHMkWSOXTJOQsvhDG2Yz6xEmV7OcPnkQSQLUJwNjKWrxc/EkSdqVYEmG
      qlL0o94lX8qJcgqM5UYA8hbPaIs30GZxaowlw0NjWy+B6jb62mueeWYw3EJu7FNuWSFePa8w
      O7+Ak1xkfnqN1cV5Tl+4RFgv2n+BYFfZQgAWd6/8hg+n4pw6e5amcAjLfnaUW1nzcvrVbzw+
      7mhrBVrpPFQ6ZwWCUrOFAFS+9c//mMuZJLeuXuHh8ALh9n5aasQ4gODlYAsBOEzc/oSP703g
      8wfp7Buks7FqbzwTCPaALcYBbJZm5zBsyGbSLDwaZ2EtuTeeCQR7wJZVoMu//8+4VOax/Hcj
      aKqgMtiyH9IyC9x5912Ug8cJpWZZNls4f7xjL3zbNn9/L0oyX1wn21t9YTqqvbvkkeBFYUsB
      pNfnuHLlCsbUHI2hKl5/+9njAALBi8iWc4HMApy4eIEqRcLMF0hnsnvhl0CwJ2w5DpA3NPoG
      j9B/9iJBj4bu8+2NZwLBHrBlFWj05gfcePiI0IFDtAQDHHnlIj2iK/Trmf4QstHi0jSdgJqe
      3fFH8Fy2EIDCpR/+AQ1tN0h6vAS8IeqCYj7Dc4mOQny6uDShNiGAfWLLEkBRdVqbdP73r++i
      OQWk8D/liF+IQPDi8lfXPyVdyAPbnA26MhPh0IVv0JwdY3FxDVpFaBTBi0sslyGV3xDAtlaE
      tQ4eIzF1m4l1lTNHy2sMQCDYCdsqAdLry/iaB7h8vBdVrOoSvERsqwSQPB7m7nzC3/zNPzC+
      GN9tnwSCPWPL2aDrC+N8cO0+vacvc/lUP2L2jOBlYosSwOSz969x6NXXmb96BREOS/CyseV0
      6GR0mQ9++Q6jYw/5yV/+hAeza3vjmUCwB2xRBfLww3/37zGsz5dBSnh0MQYgeHnYQgASmu5l
      Wx0/jkNifYWso9NYW4UkSTiOTWJtDW91HboiWg+C8qNk273kUqvcfTDBxN1brGQ2Yuyk1pZ4
      dHeIBTGBVFCmlGyTvHw2Rkvvcbq0We6s5WkMaITqWunrXmd585zdCozlZkWYaT4ZdKlUgbFU
      xyn6q2JaJnaZBtja18BY9i4FxvqSmZIJQJIVCrks6UIen//ZZhVF+SJjVUVRlWee99x8JAlN
      077yt2JRVeUJO6bLwFhP+4ILXxRFRXnaTplgu/RL82ioX0rrKjCWrHz1/hbJs96XL/fll0wA
      gXALyeGPuWaFeO1Vmdn5BYJSls/ujJAPRKm6cJG6wBfZbby07toFpVrLWwo7JbGxYWjHdsqN
      Ut9fNyWAtIUfJROAovk4d+mL/Xs3AmPBd354oFRZCAQl5+Xc81Qg2Cb7ulO8YHe5E71OJLtQ
      VJreqgEOVFVOPEshgJeYmdQkI/F7RaXxq8GKEoCoAgkqGiEAQUUjBCCoaIQABBWNEICgohEC
      EFQ0QgCCikYIQFDRCAEIKhohAEFFIwQgqGiEAAQVjRCAoKIRAhBUNEIAgopGCEBQ0QgBCCqa
      kgnANnLc+uQ9fnvlOrnNUIr55AofvvsbPh0ao7z3mhdUKiUTQCq+iN5wmFMtKjNrG4GI5ufm
      OXjmNeqtNdbcxVcSCHYVyXETbOUZxJdHiVrtdGuz3M60cbozyOTIEPVdx8nN3KTQeoZm70Zk
      ONveKCEcJFKbG28rsoymaeTzeRxAliQ8Hg+FgoHtbJzv1XVsy0LZlK2u61iWRa6woa7PAyB9
      Hs1MUVUUWaGwuSHa54GW8vk8iryR50YeBWzLADOPrusYhvHYR4/Hg21ZmJb11TwkCdUbQlEU
      8pt7TimSjbZ57ACyLOHRNvNwHCQJdI+OYRpYmyWl7vNj2RuR8wCWc0v8yS/+Y1H336Po/Kcf
      /Bccx0GSJHRdJ5vPYFobNj26jmWaWJ9fh0fDcRxMY+N3VVWRZBnbsJAlZSNwmaKQz+ewjCyy
      LKN5NAr5wuM8PLoHo/DFvdJ1HXMzD0Xz4/F4cBxn4145JqoqISF98XwUBUVVKOQLm89n8x0o
      5MEBSVbRvYGNe7eZhy3Lj/N4/Hxs+/G9+7KdQqGALEnoqoqu64/tGJaFZ9PXki2K93jDRO4/
      YN3K0Hqym2QqhU9TmRgfJR3NcbYfVGkjO8MwHr9IXt3zhJ2g3/uk4aePn0LdvLgn8D557NOf
      jAzm9Tx52T6fD/hiA3D1GXuBPx0T2/PUsao+adOv+5/y4clj5SmDKjy+DjtrkzNzX3XiOTg4
      +P1P5hH0P7WZ4dNOAzx9e5/2Sw0CwS9+fur8rxw/IwuP58mMPU+l0Z7yS/UEnjj2ud2c/al0
      X7Gj66UTgC/UwEBPgQwBmvwaiWSO5u4BrJlZOjpO4335Ap8JXgJKFxZFkqlr7qBu87A6HAag
      vbu3ZFkIBKVGdIMKKhohAEFFIwQgqGhEaMQyRJZkPE93E21BsecLNijZOEAxfLkbVCDYT0QV
      SFDRCAEIKhohAEFFIwQgqGiEAAQVjRCAoKIRAhBUNEIAgopGCEBQ0QgBCCoaIQBBRSMEIKho
      hAAEFU3JBODYBiNDV/nk1kNMe2OCqZnP8PDmddbyIiqQoDwpmQDSsQVynla69BQzsY0wF4V8
      jrBHJi5iAgnKlJ0LoJBi6NYNVuIZqmrqaWmqIpbaeOP9VbWEg2KhhqB82fmKMNVL74F+rEKc
      iYV5HGuNut7uzUBGDqZlYVkmtqNiWxaO42Bt/i8Q7Dc7F4CsEqqqAidIffQuMdo4GlRYjCwT
      kLLcmV2Dxc+oO/0KNf4vshMrwgTlgFgSKaho9mVR/ON4kSWwI0k7Czln2zayvPOmUCnslOJ6
      XlZfgB3786xr2hcBSJK04xLg87bE0zE5i6VUpVEp7BiGsRGkdocPuhS+WJaFJEk7fnlL4Ytt
      2ziOg6Iorm183fuyLwNh27sQh0Kh8Nx9BbbzcGzTwNyMwuzGF9PIUzBtHLNA3nBvB8C2TAzT
      +tpr2u59MYyNSNM78cWxLQzT/FpfJEnahhAdTKOAZe/QF8fGMIzn+rKdZ+3mfdmXNsBWzE8O
      k0qlWVxP0nn0VXrrXHSlmhlu35/CzMZISz7eOH+6aBOOYzM/dpuEr4dOZ5o7uQ4uDtRtnfBp
      bJOhoXvIdo6lrMI3XzuL7OIrn4/NcG8qRXZ9jqoDpzneVV+8L8DdmzfxaCYzMZuL588R8Lj4
      smaXuDaSwFh7hK9tkNMHO1z58nDoNrpmMhktcPLUK9QHXZTo+TVujK0RX1+i7+grdNY8Kwz2
      synLqRBGLsnQ8Dzt9R4SGXPrBM/CcYgujhGzwhiZuDsT+SRT03PMTI0zFfdwrKvanS9AfHWa
      xaSKZKZw+8lxzAJjYyNUhatJJLOufUnFlphayhPQChimS2dsk5mJu6iBBpKplGtfsql1Hkyt
      0xB0yBYsl75YRB4N0Vkvk8gW976UZWS4lq4DNK45VAWqqa53GRte9XHoQA8rUjUB250N2Rvm
      8MF+5o1ajvY24b5qLtF+4Dhd3V04toPs0o6nup3+zghVtQ3UVtW4dYbm7oOc6+pBchxkxeU3
      UPZx4vybHGgN4+C+zXLo8EHiw8s0VAeoCm7/y/2kLzr9xy/T01qLXGQ7oSxLgJnJCRajUZxC
      jEcRl18XI83Y+DQrsQwz8zOuffEFQ8yP3ub6jRssrbv86kqQWJjg9vAkS6vrrn3JR6eYXIiR
      TicYn4u6tmNEZ7l2b4zFlehz6+/PRVEYuXWNmflFYjsojYbujpNOR8kkV4kmitsU5DGyzOTd
      GywsRcgWvr6d9syk7nLcXVrb2qnxSowu5jnQHNw6wbPQ/HR1NGOszxKq73Tti7+2nW+9+Roh
      v46quP3SyfQcPkFrTQBVdd+T4alup61GZX5xjd52F20RNnp3GnsO0Vbt3dlovOLj7LkT6JqK
      soOeokN97WAWWE6r1IddTpuRdU6fPYWmaUWXrmVXBbItEzVQw2sXXwNJwuu2B802sX3NfPut
      M0w/euTKxPzEfSKJPGRjLDiN9B9yO6/JYWHsLqP5MM0eg8a6864qDY5j0tp9mGhkBslltSOR
      iJPLpEil8qBaNDU2uLKDnePOJx9Q1XMcTc9yZrDHlZnq5k4uqH68oVr8qlshFRi/+SHdPV0s
      aNX01m7/I1N2JYBZyLISWWR2boHFxSWyebcNI5O5uTlSqSRTswuuTMiqB02RAAlri67H5+JY
      rCUzSGaO9VTGdSPYiC1we3gUWZaZmFtxZaOmphavKrOwMM9iZBnLrTO5GFk0kskkyUzenQ3g
      /rUrRJJ5bl/9kKjbDo98ipwtk0qlyeVf8EawxxdCMaaR/E30dza4b3hqfk4e6SW6usqJE2dc
      mWjp6qcFMHIpaheWSGYMakMuSgFZ5dTZ80wtLFNV1+KqCxRAb+jj9KEA1TVhbM2/dYKvYej+
      KOghanSLgungK7aUdRwsfxtnT2ZZSZh09Ha79qVgWOiOiWznGZuao3qwE7XYhrm/kRNnzrKW
      kehvKu6+lF0JAOAPBok8GubGrVtEkwV3Rswst4fukc7mWY/HduSP5g3S3dvn7uU30ow8vM9v
      PriGA9y5cw/H5bbhdiHNg6Hr/PJXv2Uq4v6a+noP0N4QxFCD6G6qHVaO9bUosbSJIjukM+4b
      wf0DPSxOz2L6muhrq3X3ccivcW1oknw+SzZX3BSbshSA1x8kFAzg2BJ+v8tGgASK5qeju5uO
      ZncNxpKgBTh48BA1VSG6eg+gK6brKlAhtkhaqaKvt4NE2n21Q3Jy5EyVUKgKV+161Ud9XQ2F
      dIJ8Po/qcdl9Cdwfnubcpddo1DNkbQ+ymz5iScLjq6K7qwO//pJ0g9Z1DtBbnefBnNtBFo2O
      tloWZmaYW3LfZVgSZIWTJwaIzM3Rd/D4DqpAvbx2+ih+X4DBTpeNV2BqdoXDR49wZKAHzW3D
      MznHutrGqYE2RiemXfvS01bH8MMR1nIaNSG34wA+qrUUow8fEMsV12YsSwG0trcTeTTK+IpD
      X7PLuq4kkYutMDw5xfjUXGkdLBbbZuTBQ9K5PJlsBlxWgYz4Iks5D71tYWaXXVSBjCz379zG
      ti1uXL/BjTvD5M3i+s0fo1dDfJpbD6cwk6vMrSSLS+84mIZBTechjvV3c+rMaQKaywafmSGx
      GqEtZBGJF1dlLrtGMIDpKPS01jAxu4rtuLwpRpr5aJyqxgNImUhpHSwaB9PWGBwc3NGG4bLH
      R2RqGHnVQms+6sKAg6LXcOmtk8iSzdT4mOvqGHoN7Q1B0qbEicFBGqqe3nJ+C2yTuekJUrnN
      XhtFp7e3B7/u4pWUVWQshicidL16qrikxee2+0QWprl9c4SaKpvxhSK/LJ/jCXLs+Fm6qx1a
      2/Z3s24HiYb6IPdv3uTm/QnXdjR/Pd94/RX6jp9joLmqeAP5FLMr6zg4OI7DyvISOcNlN3Ny
      iulsDccONHFvxMU1KRrdfYfoaa1lNWVSH1CwJZeDhGqQ82//mHNvvU1bqLg2Y1mWAF0HDiKH
      klTrDm11Lh6045BIJLFtA9XjR9fddxmWgtVoFM2j4/FIoLkfCbZyCYYnl1HsDOHWAToaiuwg
      8Dcw2BTh2rXrqJJFoOEAVUX3gW4SaCaQv8X9cY3WZvcfmDv3xkkVDFKxDHl/C8Fi5345DmZi
      nquPTAYCa6z5D3G4bfuzB8pSAMsLcxSSae4kMnQcaSTUUFzx6jg2IKFqOl7ZRt7X5ZcOheQ6
      BOoJWyvYgTC4GMVdj8wwvxInMvmAXKCds+1u6lIS7f3HaHNsHCTXjfFYZB7DV8urr71KNhll
      JeO+XjfY38FHd0ZYyYQ5ES6yGgVgG8xMTzM3k6e6p5UDXS/BOIBjFXj4KEp3k49ckZObAJxC
      mtm5OZYiyywvr7CWcD9dd8ek5niwaJF89JC4GmZyZMjViHJVXQsHerqobWyjziejedx/uyRJ
      dv3yAywvzpLOWyDJaBhMzbtvY2XzJm2NTXQc6MfrpnBUPPQeOcW5o4dJpjPkreLubVkKoKP/
      KJcunaelfZCDLcVXX2RvFUcGD6JYWSyrQN7YxzU/RgFblZF1GdNwXDfqFVWD1By5YC/nBup4
      MLV/Dfvu/n6WRm9xc+g21+5OM9jX7dpWfXMrTQ01jN69SazIufyPySWYmhumrsZmZiVTVNKy
      XBE2N3aHX9+c5O0TLSyHjnKiLVC8kUKS9z8b5dJrp3nv3ff45ptvlt7R7WAViKxEeTzrWNFp
      bqhxte7Xyif47MZ9NFWi8cBROupczpQtEZZlISvKDlYDQHx1kZTpobmpFsVtqeRYPLzxMWlL
      oX3wHM1V26/ylmUJoMgSlpFhZHKJgNdlUa94qNYNbl6/iSrLPJxyNyFuxygemppbaGnZ/NdY
      63rRu6z5CQc8OIqX6oCL+nKJUXb48gPMToywsLTAyOgEGbcrwrKrLEWW8VoZ0kWOa5RlI7iu
      rY8//EEXkuygue2lkFWCPp1Y1qSh8xCDPU2ldXIfyK2MsSo1c64jzdXRed443rXfLu0Yx5Jp
      6ewk7FHdzUsCUDX8da0k7RyeIgVQliXA9Mgd1gsy1soo9+fS7owYGWZjNifPnmXx0YPSOrhP
      aFXNSPFpHkyt0tHsfklkWeDYFAyT9p4O1hYWmJ2bd7UmOJ9NkSHM4SNHOXvuMgONxXWjlqUA
      WtvaWJwaZXjJoK/FRf0fQPEQkrPcvH4Tx7L2rwpUIsxcgonpVQ4f7kPxhWmq3t+xjR1TSHL9
      3ig1ukVKqyekZFlPFz/zd2VmmJnVDDdu3Sx6PTCUqQCWliK09Q4w2OZnKuKuBHBkDyfOvkJz
      WKe2rY/BntYSe7m33Ls1hL86yLVPb9EUdrg5+mILGscmk81hmXkyOYN8PodRZBcmgEdTicyM
      k0wkeTg8QiJT3HTosmwD1NaEeTA1jpJdp+dM8V86K73CB9dHCIeCTM0v8rvffXsXvNxb8o6D
      Lsvg1fGpCobbKQzlghbkYGsV4+sWHd4kltxAW3XxDfvG3pM09gIUNwfoc8qyGxQgl1xndjlK
      c2sXoSIbwnYhxeTMIon1GBMzM1y4/C06GsO75OnekI5HWf9S9IVgdT3Vwf3vCXrRKS8BOA4L
      j0aJJrKYyQhzUie/c+EgmsvYNY5jk07ESOYdWhr3cVGMoGwpuypQNpuhYJhoioyqeVHcRpFi
      Y8g/GK5lf4eLBOVMeZUAXyKbiDI+vUBH70GqA+6X3AkEz6NsBSAQ7AVl2Q0qEOwV/x/3yDWO
      J9b5xQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='2b' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='2c' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='2d' width='192'>
      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
      /B+V6rmR7rZTcwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='3a' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='4a' width='192'>
      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
      jZ5YAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='4b' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='4c' width='192'>
      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
      PIP/D9szJLg+iYZVAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
